@model SupplyProject.Models.Demanda_produtor

@{
    ViewBag.Title = "Create";
}

<h2>Criar</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Demanda do Produtor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
           @* @Html.LabelFor(model => model.Produto_produtor_idProduto_produtor, "Produto_produtor_idProduto_produtor", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="Produto_produtor_idProduto_produtor">Produto Final</label>
            <div class="col-md-10">
                @Html.DropDownList("Produto_produtor_idProduto_produtor", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Produto_produtor_idProduto_produtor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Produto_armazem_idProduto_armazem, "Produto_armazem_idProduto_armazem", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="Produto_armazem_idProduto_armazem">Produto solicitado</label>
            <div class="col-md-10">
                @Html.DropDownList("Produto_armazem_idProduto_armazem", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Produto_armazem_idProduto_armazem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Usuario_idUsuario, "Usuario_idUsuario", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="Usuario_idUsuario">Usuario responsável</label>
            <div class="col-md-10">
                @Html.DropDownList("Usuario_idUsuario", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Usuario_idUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ano_pedido, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="ano_pedido">Ano</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ano_pedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ano_pedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.mes_pedido, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="mes_pedido">Mês</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.mes_pedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mes_pedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.dia_pedido, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="dia_pedido">Dia</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.dia_pedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dia_pedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar para lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
